
/** 
* @author sandeep kolli
*/

import java.util.Scanner; 
public class GuessGame{
    Scanner sc = new Scanner(System.in);
    
    /**
    @param UserName
    it is the main function in entire code
    for a particular user to play all the required operations and variables were called here
    input was taken inside the function and process it accordingly
    in the end it will return the score  
    */
    public int playGame(String UserName) throws Exception {
        int bonusFlag = 0;
        GuessGameOps game = new GuessGameOps(); 
        game.readFile("C:\\Users\\PINAKA\\Desktop\\JAVA\\Deep\\CSPP2 (JAVA)\\Project\\Hang Man\\Hang Man Version 2\\movies.txt");
        System.out.println();
        System.out.println("-----------------------------------------------------------");
        System.out.println("-----------------------------------------------------------");
        System.out.println("        Hey "+ UserName+"!! welcome to the game HANG-MAN");
        System.out.println("-----------------------------------------------------------");
        System.out.println("-----------------------------------------------------------");
        System.out.println("Which level you want to play (Easy or Medium or Hard): ");
        System.out.println("1 for Easy");
        System.out.println("2 for Medium");
        System.out.println("3 for Hard");
        System.out.println("4 for random level (computer will choose)");
        System.out.println("Only 1 - 4 is accepted");
        System.out.println("-----------------------------------------------------------");
        int level;
        
        //only integer value is accepted
        // other than values 1-4 if you give any other input it will ask for again
        // exceptions(if you give other than int as input) was handled properly 
        
        System.out.print("Choose a level : ");
        level = getLevelInput();
        while(level < 1 || level > 4){
            System.out.print("Choose a level : ");
            level=getLevelInput();
        }
        
        // a random movie gets generated based on the level you choose

        movie randomMovie;
        if(level == 4) randomMovie = game.randomWord();
        else randomMovie = game.randomWord(level);
        char guessedChar = '\0';
        String guessedString = game.guessedWord(randomMovie, guessedChar);
        String finalString = guessedString;
        System.out.println(randomMovie.getMovieName());
        System.out.println(randomMovie.getLevel());
        String intialGuessLetters = "zjxqkvbgpwyfmculdrithanose";
        String usedChars = "";
        int guessInitial = 0;
        int k = 0;
        int initialGuessLength = Math.floorDiv(randomMovie.getMovieName().length(), 4);

        //initial string gets generated by guessing some of the chars computer by itself

        while(guessInitial < initialGuessLength){
            guessedChar = intialGuessLetters.charAt(k);
            guessedString = game.guessedWord(randomMovie, guessedChar);
            if(!(guessedString.equals("696NOCOMMON696")))
            {
                String sampleStr = "";
                for(int i = 0; i < finalString.length(); i++){
                    Character c1 = new Character(finalString.charAt(i));
                    Character c2 = new Character(guessedString.charAt(i));
                    if((c1.equals(c2))) sampleStr = sampleStr + finalString.charAt(i);
                    else
                    {
                        if((int)guessedString.charAt(i) == 95) sampleStr = sampleStr + finalString.charAt(i);
                        else sampleStr = sampleStr + guessedString.charAt(i);

                    }
                }
                usedChars = usedChars + guessedChar;
                finalString = sampleStr;
                guessInitial++;
            }
            k++;
        }

        //finding out how many characters system has gussed already

        int systemGuessedChances=0;
        for(int i = 0; i < finalString.length(); i++){
            if(game.condition1(finalString.charAt(i)) || game.condition1(finalString.charAt(i))){
                systemGuessedChances++;
            }
        }

        // calculating chances left based on the chars guessed by the system.

        int chancesLeft;
        boolean check;
        String remaingChars="abcdefghijklmnopqrstuvwxyz";
        if(((randomMovie.getMovieName().length()) - (systemGuessedChances*3)) < systemGuessedChances*2) 
        {
            chancesLeft = (randomMovie.getMovieName().length()) - (systemGuessedChances*2);
        }
        else chancesLeft = (randomMovie.getMovieName().length()) - (systemGuessedChances*3);


        //taking user input starts here

        System.out.println("----------------------------------------------------------------");
        System.out.println("Give charachter input, only one charachter is accepted at a time");
        System.out.println("  If you want to exit press '@' and if you want hint press '#'");
        System.out.println("       If you ask for hints you wont get bonus points");
        System.out.println("----------------------------------------------------------------");
        while(chancesLeft > 0){
            String charInpt;
            System.out.println();
            System.out.println(finalString);
            System.out.println("Chances Left: "+chancesLeft);
            System.out.println("already guessed charachters: "+usedChars );
            game.remainingChars(remaingChars,usedChars);
            System.out.print("Guess a Character (@ to EXIT and # for HINT): ");
            
            //takes char input here, if you enter 2 charachters at the same time, it will ask for again

            charInpt = getCharInput();
            while(charInpt.length() != 1){
                System.out.print("Character input one at a time : ");
                charInpt=getCharInput();
            }
            guessedChar = charInpt.charAt(0);
            if(((int)guessedChar) == ((int)'@'))
            {
                break;
            }
            else if(((int)guessedChar) == ((int)'#'))
            {   
                bonusFlag = 1;
                System.out.println("------------------------");
                System.out.println("Hints are:");
                System.out.println(randomMovie.getHint1());
                System.out.println(randomMovie.getHint2());
                System.out.println("------------------------");
            }
            else{

                //if you make a guess, which was guessed already then it will ask again without reducing the chances

                if(usedChars.indexOf(guessedChar) == -1)
                {
                    guessedString = game.guessedWord(randomMovie, guessedChar);
                    
                    // if you make wrong guess chances get reduces
                    
                    if(!(guessedString.equals("696NOCOMMON696")))
                    {
                        String sampleStr = "";
                        for(int i = 0; i < finalString.length(); i++){
                            Character c1 = new Character(finalString.charAt(i));
                            Character c2 = new Character(guessedString.charAt(i));
                            if((c1.equals(c2))) sampleStr = sampleStr + finalString.charAt(i);
                            else
                            {
                                if((int)guessedString.charAt(i) == 95) sampleStr = sampleStr + finalString.charAt(i);
                                else sampleStr = sampleStr + guessedString.charAt(i);
            
                            }
                        }
                        usedChars = usedChars+guessedChar;
                        finalString = sampleStr;
                        check = game.checkFinal(finalString);
                        if(check == true) break;
                    }
                    else{
                        // all the used chars were kept track of
                        usedChars = usedChars+guessedChar;
                        chancesLeft--;
                    }
                }
                else{
                    System.out.println("=> Already This charachter was guessed please try new one");
                }
            }
        }
        System.out.println();
        System.out.println(finalString);
        check=game.checkFinal(finalString);
        
        // it will print he final string after guessed

        if(check == true) 
        {
            //it will check whether all the gusses were finished succefully or not
            // then score will get calculated and bonus will get added based on hint usage

            if(bonusFlag == 0) return ((randomMovie.getMovieName().length() * 10) + 100);
            else return randomMovie.getMovieName().length() * 10;
        }
        else 
        {
            return 0;
        }
    }

    /**
    an integer taken from user and that value gets returned
    it is a helper function
    */

    private int getLevelInput(){
        try{
            return sc.nextInt();
         }
         catch(Exception e){
            sc.next();
            System.out.print("Only Integer Input Is Accepted, please give integer in input: ");
            return getLevelInput();
         }
    }

    /**
    a string taken from user and that value gets returned
    it is helper function
    */

    private String getCharInput(){
        String temp = sc.next();
        return temp;
    }
}